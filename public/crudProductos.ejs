<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CRUD de Productos</title>
    <style>
        /* Estilos */
        body {
            font-family: Arial, sans-serif;
            background-color: #222e35;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            background-color: #cdcdcd;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: #333333;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }

        table, th, td {
            border: 1px solid #222e35;
            text-align: left;
            padding: 8px;
        }

        th {
            background-color: #3a6390;
            color: white;
            text-align: center;
        }

        .form-container {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        form input[type="text"],
        form input[type="number"] {
            width: 97%;
            padding: 10px;
            margin: 5px;
            border: 1px solid #dddddd;
            border-radius: 5px;
        }

        form button {
            padding: 10px 20px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        form button:hover {
            background-color: #218838;
        }

        .edit-btn,
        .delete-btn {
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .edit-btn {
            background-color: #007bff;
            color: white;
        }

        .edit-btn:hover {
            background-color: #0056b3;
        }

        .delete-btn {
            background-color: #dc3545;
            color: white;
        }

        .delete-btn:hover {
            background-color: #c82333;
        }

        .back-link {
            display: inline-block;
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #ffc107;
            color: white;
            text-decoration: none;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Gestión de Productos</h1>

        <!-- Formulario para agregar un nuevo producto -->
        <div class="form-container">
            <form id="producto-form">
                <input type="text" name="Nombre" placeholder="Nombre del producto" required>
                <input type="text" name="Descripcion" placeholder="Descripción" required>
                <input type="number" name="Precio" placeholder="Precio" step="0.01" required>
                <input type="number" name="Stock" placeholder="Stock" required>
                <button type="submit">Agregar Producto</button>
            </form>
        </div>

        <!-- Tabla de productos -->
        <table>
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th>Precio</th>
                    <th>Stock</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="productos-table">
                <% productos.forEach(producto => { %>
                    <tr>
                        <td><%= producto.Nombre %></td>
                        <td><%= producto.Descripcion %></td>
                        <td>$<%= producto.Precio.toFixed(2) %></td>
                        <td><%= producto.Stock %></td>
                        <td>
                            <!-- Botón para editar -->
                            <button class="edit-btn" onclick="editarProducto('<%= producto._id %>', '<%= producto.Nombre %>', '<%= producto.Descripcion %>', <%= producto.Precio %>, <%= producto.Stock %>)">Editar</button>
                            <!-- Botón para eliminar -->
                            <button class="delete-btn" onclick="eliminarProducto('<%= producto._id %>')">Eliminar</button>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>

        <!-- Botón de regreso -->
        <a href="/producto" class="back-link">Volver a la lista de productos</a>
    </div>

    <script>
        // Manejar el envío del formulario para agregar un nuevo producto
        document.getElementById('producto-form').addEventListener('submit', async function(event) {
            event.preventDefault();
            const formData = new FormData(this);

            const nuevoProducto = {
                Nombre: formData.get('Nombre'),
                Descripcion: formData.get('Descripcion'),
                Precio: formData.get('Precio'),
                Stock: formData.get('Stock')
            };

            try {
                const response = await fetch('/producto', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(nuevoProducto)
                });

                if (response.ok) {
                    const productoAgregado = await response.json();
                    agregarProductoTabla(productoAgregado); // Agregar producto a la tabla
                    this.reset(); // Limpiar formulario
                } else {
                    alert('Error al agregar el producto');
                }
            } catch (error) {
                console.error('Error al agregar producto:', error);
            }
        });

        // Función para agregar un nuevo producto a la tabla sin recargar la página
        function agregarProductoTabla(producto) {
            const tabla = document.getElementById('productos-table');
            const fila = document.createElement('tr');

            fila.innerHTML = `
                <td>${producto.Nombre}</td>
                <td>${producto.Descripcion}</td>
                <td>$${producto.Precio.toFixed(2)}</td>
                <td>${producto.Stock}</td>
                <td>
                    <button class="edit-btn" onclick="editarProducto('${producto._id}', '${producto.Nombre}', '${producto.Descripcion}', ${producto.Precio}, ${producto.Stock})">Editar</button>
                    <button class="delete-btn" onclick="eliminarProducto('${producto._id}')">Eliminar</button>
                </td>
            `;

            tabla.appendChild(fila);
        }

        // Función para editar un producto
        async function editarProducto(id, nombreActual, descripcionActual, precioActual, stockActual) {
            const nuevoNombre = prompt("Nuevo nombre:", nombreActual);
            const nuevaDescripcion = prompt("Nueva descripción:", descripcionActual);
            const nuevoPrecio = prompt("Nuevo precio:", precioActual);
            const nuevoStock = prompt("Nuevo stock:", stockActual);

            if (nuevoNombre && nuevaDescripcion && nuevoPrecio && nuevoStock) {
                const productoActualizado = {
                    Nombre: nuevoNombre,
                    Descripcion: nuevaDescripcion,
                    Precio: parseFloat(nuevoPrecio),
                    Stock: parseInt(nuevoStock)
                };

                try {
                    const response = await fetch(`/producto/${id}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(productoActualizado)
                    });

                    if (response.ok) {
                        location.reload(); // Recargar la página para actualizar la tabla
                    } else {
                        alert('Error al actualizar el producto');
                    }
                } catch (error) {
                    console.error('Error al actualizar el producto:', error);
                }
            } else {
                alert("Todos los campos deben ser completados.");
            }
        }

        // Función para eliminar un producto
        async function eliminarProducto(id) {
            const confirmacion = confirm('¿Estás seguro de que quieres eliminar este producto?');
            if (confirmacion) {
                try {
                    const response = await fetch(`/producto/${id}`, { method: 'DELETE' });
                    if (response.ok) {
                        location.reload(); // Recargar la página para actualizar la tabla
                    } else {
                        alert('Error al eliminar el producto');
                    }
                } catch (error) {
                    console.error('Error al eliminar el producto:', error);
                }
            }
        }
    </script>
</body>
</html>
